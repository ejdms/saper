var x=Object.defineProperty,L=Object.defineProperties;var E=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var b=Object.prototype.hasOwnProperty,S=Object.prototype.propertyIsEnumerable;var m=(l,e,t)=>e in l?x(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t,u=(l,e)=>{for(var t in e||(e={}))b.call(e,t)&&m(l,t,e[t]);if(p)for(var t of p(e))S.call(e,t)&&m(l,t,e[t]);return l},y=(l,e)=>L(l,E(e));var h=(l,e,t)=>(m(l,typeof e!="symbol"?e+"":e,t),t);const k=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerpolicy&&(n.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?n.credentials="include":s.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}};k();class W{constructor({root:e,view:t,width:i,height:s,mines:n,wrongs:r,onLose:f,onWin:o,onCellClick:c,topLeftCellIsAlwaysEmpty:d=!0,topLeftCellSiblingsAreNeverMine:a=!0}){h(this,"getAllCellsSiblings",e=>{const{x:t,y:i}=e,s=this.gamefield.length-1,n=this.gamefield[0].length-1,r=[];for(let f=0;f<8;f++){let o=null;switch(f){case 0:i>0&&t>0&&(o=[i-1,t-1]);break;case 1:i>0&&(o=[i-1,t]);break;case 2:i>0&&t<n&&(o=[i-1,t+1]);break;case 3:t<n&&(o=[i,t+1]);break;case 4:i<s&&t<n&&(o=[i+1,t+1]);break;case 5:i<s&&(o=[i+1,t]);break;case 6:i<s&&t>0&&(o=[i+1,t-1]);break;case 7:t>0&&(o=[i,t-1]);break}if(o){const[c,d]=o;r.push(this.gamefield[c][d])}}return r});this.root=e,this.view=t,this.width=i,this.height=s,this.mines=n,this.wrongs=r,this.topLeftCellIsAlwaysEmpty=d,this.topLeftCellSiblingsAreNeverMine=a,this.gamefield=[],this.onLose=f,this.onWin=o,this.onCellClickFromProps=c}isCellEmpty(e){return!e.mine&&!e.nearbyMines&&!e.nearbyWrongs}recursiveOpenEmptySiblings(e){const t=[],i=[];let s=0;const n=r=>{if(s++,s>1e3||(i.push(r),!this.isCellEmpty(r)))return;this.getAllCellsSiblings(r).forEach(c=>{i.find(d=>d.x===c.x&&d.y===c.y)||t.push(c)});const o=t.filter(c=>{const d=!!i.find(a=>a.x===c.x&&a.y===c.y);return this.isCellEmpty(c)&&!d});o.length&&o.forEach(n)};n(e),t.forEach(r=>{r.open=!0}),this.view.renderGamefield(this.gamefield)}checkForWin(){!this.gamefield.some(t=>t.some(i=>!i.open&&!i.mine&&!i.wrong))&&typeof this.onWin=="function"&&(this.onWin(),this.view.renderGamefield(this.gamefield,!0))}onCellClick(e,t){const i=this.gamefield[t][e];i.open||i.flagMine||i.flagWrong||(i.open=!0,typeof this.onCellClickFromProps=="function"&&this.onCellClickFromProps(i),i.mine&&typeof this.onLose=="function"&&this.onLose(),this.view.renderGamefield(this.gamefield,i.mine),this.isCellEmpty(i)&&this.recursiveOpenEmptySiblings(i),i.mine||this.checkForWin())}onCellRightClick(e,t){const i=this.gamefield[t][e];i.open||(i.flagWrong?(i.flagMine=!0,i.flagWrong=!1):i.flagMine?i.flagMine=!1:i.flagWrong=!0,this.view.renderGamefield(this.gamefield),this.checkForWin())}randomizeMinesAndWrongs(){let e=this.gamefield.flat();this.topLeftCellIsAlwaysEmpty&&(e=e.slice(1,e.length-1));const t=[];for(let s=0;s<this.wrongs;s++){if(e.length===0)throw new Error("too many wrongs!!!");const n=Math.floor(Math.random()*e.length);t.push(u({},e[n])),e.splice(n,1)}t.forEach(({x:s,y:n})=>{this.gamefield[n][s].wrong=!0});const i=[];if(this.topLeftCellSiblingsAreNeverMine){const s=this.getAllCellsSiblings(this.gamefield[0][0]);e=e.filter(n=>!s.some(r=>n.x===r.x&&n.y===r.y))}for(let s=0;s<this.mines;s++){if(e.length===0)throw new Error("too many mines!!!");const n=Math.floor(Math.random()*e.length);i.push(u({},e[n])),e.splice(n,1)}i.forEach(({x:s,y:n})=>{this.gamefield[n][s].mine=!0})}fillTheOthers(){this.gamefield=this.gamefield.map((e,t)=>e.map((i,s)=>{if(i.mine)return i;let n=0,r=0;return this.getAllCellsSiblings(i).forEach(o=>{o.mine&&n++,o.wrong&&r++}),y(u({},i),{nearbyMines:n,nearbyWrongs:r})}))}initGamefield(e,t){for(let i=0;i<t;i++){this.gamefield[i]=[];for(let s=0;s<e;s++){const n=this.topLeftCellIsAlwaysEmpty&&s===0&&i===0;this.gamefield[i][s]={x:s,y:i,open:!1,mine:!1,wrong:!1,nearbyMines:0,nearbyWrongs:0,flagMine:!1,flagWrong:!1,onClick:()=>this.onCellClick(s,i),onRightClick:()=>this.onCellRightClick(s,i),shiny:n}}}this.randomizeMinesAndWrongs(),this.fillTheOthers()}init(){this.initGamefield(this.width,this.height),this.view.renderGamefield(this.gamefield)}}class G{constructor({root:e,view:t,onGameWin:i,onGameLose:s,onCellClick:n,difficulty:r,onDifficultyChange:f,toggleButtons:o}){h(this,"init",()=>{const{width:e,height:t,mines:i,wrongs:s}=this.difficulty;this.game=new W({root:this.root,view:this.view,width:e,height:t,mines:i,wrongs:s,onLose:this.onGameLose,onWin:this.onGameWin,onCellClick:this.onCellClick,topLeftCellIsAlwaysEmpty:!0,topLeftCellSiblingsAreNeverMine:!0}),this.game.init()});h(this,"onCellClick",e=>{typeof this.onCellClickFromProps=="function"&&this.onCellClickFromProps(e)});h(this,"onGameWin",()=>{this.toggleButtons(!0),typeof this.onGameWinFromProps=="function"&&this.onGameWinFromProps()});h(this,"onGameLose",()=>{this.toggleButtons(!0),typeof this.onGameLoseFromProps=="function"&&this.onGameLoseFromProps()});h(this,"resetGame",()=>{this.toggleButtons(!1),this.game.init()});h(this,"changeDifficultyAndResetGame",async()=>{const e=await this.view.renderDifficultyLevelSelectAndGetChoice();this.onDifficultyChange(e)});this.root=e,this.view=t,this.toggleButtons=o,this.onGameWinFromProps=i,this.onGameLoseFromProps=s,this.onCellClickFromProps=n,resetButton.addEventListener("click",this.resetGame),changeDifficultyButton.addEventListener("click",this.changeDifficultyAndResetGame),this.game=null,this.difficulty=r,this.onDifficultyChange=f}}class P{constructor(e){h(this,"addLose",()=>{this.loses=Number(this.loses)+1,localStorage.setItem("loses",Number(this.loses)),this.renderScores()});this.root=e,this.wins=localStorage.getItem("wins")||0,this.loses=localStorage.getItem("loses")||0}addWin(){this.wins=Number(this.wins)+1,localStorage.setItem("wins",Number(this.wins)),this.renderScores()}hideScores(){this.root.innerHTML=""}renderScores(){const e=`
      <div class="wins">Wins: ${this.wins}</div>
      <div class="loses">Loses: ${this.loses}</div>
    `;this.root.innerHTML=e}}var v=[{number:0,experienceNeeded:0},{number:1,experienceNeeded:150},{number:2,experienceNeeded:400},{number:3,experienceNeeded:1e3},{number:4,experienceNeeded:1500},{number:5,experienceNeeded:3e3},{number:6,experienceNeeded:7e3}];class A{constructor(){const{experience:e=0}=localStorage.getItem("player")&&JSON.parse(localStorage.getItem("player"))||{};this.experience=e,this.level=0,this.calculateLevel(e)}calculateLevel(e){let t=0;v.forEach(i=>{i.experienceNeeded<=e&&(t=i.number)}),this.level=t}addExperience(e){this.experience+=e,this.calculateLevel(this.experience),localStorage.setItem("player",JSON.stringify({experience:this.experience}))}}class M{constructor(e,t){this.root=e,this.player=t}hidePlayer(){this.root.innerHTML=""}renderPlayer(){const e=v.find(s=>s.number===this.player.level+1),t=e?e.experienceNeeded-this.player.experience:"MAX LEVEL",i=`
      <div>Experience: ${this.player.experience}</div>
      <div>Level: ${this.player.level}</div>
      <div>Experience needed: ${t}</div>
    `;this.root.innerHTML=i}}class N{constructor(e){this.root=e,this.player=new A,this.view=new M(this.root,this.player)}addExperience(e){this.player.addExperience(e),this.view.renderPlayer()}}var w=[{id:"DEBUG",name:"debug",width:5,height:5,mines:0,wrongs:2,experiencePerOpen:5,experiencePerWin:30},{id:"VERY_EASY",name:"very easy",width:5,height:5,mines:2,wrongs:2,experiencePerOpen:5,experiencePerWin:30},{id:"EASY",name:"easy",width:6,height:6,mines:3,wrongs:3,experiencePerOpen:10,experiencePerWin:50},{id:"MEDIUM",name:"medium",width:7,height:7,mines:8,wrongs:5,experiencePerOpen:15,experiencePerWin:75}];const g=50;class I{constructor({root:e,scores:t,player:i,toggleButtons:s}){h(this,"hideAdditionalInfos",()=>{this.toggleButtons(!1),this.scores.hideScores(),this.player.view.hidePlayer()});h(this,"showAdditionalInfos",()=>{this.scores.renderScores(),this.player.view.renderPlayer()});this.root=e,this.scores=t,this.player=i,this.toggleButtons=s}addEventListeners(e){Array.from(this.root.querySelectorAll(".cell")).forEach(i=>{const{x:s,y:n}=i.dataset;i.addEventListener("click",()=>e[n][s].onClick()),i.addEventListener("contextmenu",r=>{r.preventDefault(),e[n][s].onRightClick()})})}renderCell({x:e,y:t,open:i,mine:s,wrong:n,nearbyMines:r,nearbyWrongs:f,flagMine:o,flagWrong:c,shiny:d}){let a=`<div
      style="width: ${g}px; height: ${g}px"
      data-x="${e}"
      data-y="${t}"
      class="cell`;return s&&(a+=" mine"),n&&(a+=" wrong"),i&&(a+=" open"),o&&(a+=" flag-mine"),c&&(a+=" flag-wrong"),d&&(a+=" shiny"),a+='">',s||(r&&(a+=`<span class="mines">${r}</span>`),f&&(a+=`<span class="wrongs">${f}</span>`)),a+="</div>",a}renderCells(e){let t="";return e.forEach(i=>{i.forEach(s=>{t+=this.renderCell(s)})}),t}renderGamefield(e,t){var i;if(typeof((i=e==null?void 0:e[0])==null?void 0:i[0])!="undefined"){const s=e[0].length,n=e.length;let r="grid-template-columns: ";for(let c=0;c<s;c++)r+=" 1fr ";r+="; grid-template-rows: ";for(let c=0;c<n;c++)r+=" 1fr ";r+=`; width: ${g*s}px`;const o=`
        <div class="${`gamefield${t?" game-stop":""}`}" style="${r}">
          ${this.renderCells(e)}
        </div>
      `;this.root.innerHTML=o,t||this.addEventListeners(e)}else console.log("some cell is undefiend!!!!")}async renderDifficultyLevelSelectAndGetChoice(){return this.hideAdditionalInfos(),new Promise(e=>{const t=`
      <div class="difficulty-select">
        <h3>Choose difficulty:</h3>
        ${w.map(s=>`<button class="button" data-difficulty="${s.id}">
                ${s.name}
              </button>`).join("")}
      </div>
      `;this.root.innerHTML=t,this.root.querySelectorAll("[data-difficulty]").forEach(s=>{s.addEventListener("click",n=>{const r=n.target.dataset.difficulty,f=w.find(o=>o.id===r);this.showAdditionalInfos(),e(f)})})})}}const $=document.querySelector("#resetButton"),B=document.querySelector("#changeDifficultyButton"),C=[$,B];class D{constructor(){h(this,"asyncConstructor",async()=>{this.root=document.querySelector("#game"),this.player=new N(document.querySelector("#player")),this.scores=new P(document.querySelector("#scores")),this.view=new I({root:this.root,player:this.player,scores:this.scores,toggleButtons:this.toggleButtons}),this.difficulty=await this.view.renderDifficultyLevelSelectAndGetChoice(),this.scores.renderScores(),this.resetSaper()});h(this,"resetSaper",()=>{this.saper=new G({root:this.root,view:this.view,onGameWin:this.onGameWin,onGameLose:this.onGameLose,onCellClick:this.onCellClick,toggleButtons:this.toggleButtons,difficulty:this.difficulty,onDifficultyChange:this.onDifficultyChange}),this.saper.init()});h(this,"onDifficultyChange",e=>{this.difficulty=e,this.resetSaper()});h(this,"onCellClick",({mine:e,wrong:t})=>{!e&&!t&&this.player.addExperience(this.difficulty.experiencePerOpen)});h(this,"onGameLose",()=>{this.scores.addLose()});h(this,"onGameWin",()=>{this.player.addExperience(this.difficulty.experiencePerWin),this.scores.addWin()});this.asyncConstructor()}toggleButtons(e){e&&C.forEach(t=>t.classList.remove("hidden")),e||C.forEach(t=>t.classList.add("hidden"))}}new D;
